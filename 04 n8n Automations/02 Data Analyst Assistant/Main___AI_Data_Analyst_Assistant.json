{
  "name": "Main - AI Data Analyst Assistant",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "067595d4-da76-4c80-ab6f-a98035c5ece2",
      "name": "When chat message received",
      "webhookId": "703ad96d-2f37-4074-a248-565575c3cd1d"
    },
    {
      "parameters": {
        "url": "http://app.nocodb.com/api/v2/tables/mes8iadm1g3tv5h/records",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "nocoDbApiToken",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        220,
        0
      ],
      "id": "54ef5e24-f574-4ab0-91bf-900893e94826",
      "name": "HTTP Request",
      "credentials": {
        "nocoDbApiToken": {
          "id": "1uAQIdxQiCvowVKB",
          "name": "NocoDB Token account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ab67e154-779e-4170-b332-6fd977e30a33",
              "name": "columns",
              "value": "={{ Object.keys($json.list[0]).toJsonString()}}",
              "type": "string"
            },
            {
              "id": "4257d5c8-9b5a-411c-886a-acca162db314",
              "name": "chatInput",
              "value": "={{ $('When chat message received').item.json.chatInput }}",
              "type": "string"
            },
            {
              "id": "bae9ed85-1c7e-41e8-a130-37bf6e874f7d",
              "name": "sessionId",
              "value": "={{ $('When chat message received').item.json.sessionId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        440,
        0
      ],
      "id": "a2365422-7484-4680-bd6c-a3561c8dd5f0",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When chat message received').item.json.chatInput }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a helpful Visualization and Data Analysis Expert skilled working with nocodb, a database tool. You are tasked to help the user understand the table that they mention.\n\nHere's the columns to the table for context:\n{{ $json.columns }}\n\nWhen provided with a chart URL, return it using Markdown so that the chart image displays inline. Example format:\n![Generated Chart] (chart_url)"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        660,
        0
      ],
      "id": "6319dde3-5afb-4a49-8fb9-564f8286b72d",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        460,
        280
      ],
      "id": "36534ab6-7f5d-4836-9420-1f0d52379619",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "4kMtDg0iV665FFzw",
          "name": "Personal Assistant"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 7
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        640,
        280
      ],
      "id": "8fb14025-6520-4290-92b5-9a0a86f68be9",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "name": "Visualization_Agent",
        "description": "Call this tool when necessary to create a chart. All string values must be properly escaped, especially for multi-line strings. When processing the output of the tool, URLs returned should always be in markdown format. For example ![](url)",
        "workflowId": {
          "__rl": true,
          "value": "7EUeeEe6pSJ7gFwi",
          "mode": "list",
          "cachedResultName": "Sub - Data Visualization Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "=\n{\n\"type\": \"object\",\n\"properties\": {\n  \"query\": {\n    {{ $fromAI('query', ``, 'string') }}\n  }\n}\n}"
          },
          "matchingColumns": [
            "query"
          ],
          "schema": [
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        800,
        280
      ],
      "id": "56719ca7-fb4a-4147-ab09-b6a19b2544fe",
      "name": "Visualization Agent"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "workspaceId": "wwan37no",
        "projectId": "p85rufxmp7cmc2d",
        "table": "mes8iadm1g3tv5h",
        "options": {
          "where": "={{ $fromAI(\"filter_formula\", \"formula to filter. For example, (Commodity,eq,Oil ) will filter for rows where the Commodity column equals 'Oil'. The operators are neq for not equal, gt for greater than, lt for less than, etc. Compound conditions can be expressed like (Revenue (in Billions),gt,100)~and(Net Cost (in Billions),lt,50).\") }}"
        }
      },
      "type": "n8n-nodes-base.nocoDbTool",
      "typeVersion": 3,
      "position": [
        1000,
        280
      ],
      "id": "bfbab7b3-1836-4995-b8ed-2aae38692d6b",
      "name": "NocoDB",
      "credentials": {
        "nocoDbApiToken": {
          "id": "1uAQIdxQiCvowVKB",
          "name": "NocoDB Token account"
        }
      }
    }
  ],
  "pinData": {
    "When chat message received": [
      {
        "json": {
          "sessionId": "4e9e357a0d34449cad18bbea6c35d323",
          "action": "sendMessage",
          "chatInput": "What are the top 3 Coal companies with the highest ONRR - Royalties revenue for the year 2024? Create a comprehensive report on it."
        }
      }
    ]
  },
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Visualization Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "NocoDB": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "215e156b-263d-4888-ac7d-e05f5c9a9ffa",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "10c10bbd32280f5ab90070409f56f7895b081140e8bbc7b1ce7c61e1ddbbf3f8"
  },
  "id": "q2TqysEQW2F7a1a9",
  "tags": []
}